@page "/sandbox"
@using CardGameWebApp.Client.Components
@using CardGameWebApp.Shared.Responses
@using System.Net
@inject HttpClient Http

<h1>Create and test sandbox</h1>

<div class="btn-toolbar" role="toolbar" aria-label="Toolbar">
	<div class="btn-group me-2" role="group" aria-label="Test">
		<button type="button" class="btn btn-primary" data-bs-toggle="offcanvas" data-bs-target="#playArea" @onclick="() => PlayGame()">
			<span class="oi oi-media-play" aria-hidden="true"></span> Play
		</button>
	</div>

	<div class="btn-group" role="group" aria-label="Preloads">
		<div class="btn-group" role="group">
			<button id="btnGroupDrop1" type="button" class="btn btn-primary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
				Examples
			</button>
			<ul class="dropdown-menu" aria-labelledby="btnGroupDrop1">
				@foreach (var preload in preloads)
				{
				<li>
					<a class="dropdown-item" @onclick="() => SelectPreload(preload.Key)">@preload.Key</a>
				</li>	
				}
			</ul>
		</div>
	</div>
</div>

<HighlightEditor @ref=highlighter></HighlightEditor>

<div class="offcanvas offcanvas-end" data-bs-scroll="true" data-bs-backdrop="false" tabindex="-1" id="playArea" aria-labelledby="offcanvasRightLabel">
  <div class="offcanvas-header">
    <h5 id="offcanvasRightLabel">Game</h5>
    <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
  </div>
  <div class="offcanvas-body">
	  <GameSimulator @ref=@gameSim></GameSimulator>
  </div>
</div>


@code {
	private bool playing = false;
	private GameSimulator gameSim;
	private string gameUrl = string.Empty;
	private GameIndexResponse game;
	private HighlightEditor highlighter;

	private async void PlayGame()
	{
		game.Game.CGDLSource = highlighter.Value;
		var response = await Http.PostAsync(game.Links["self"], JsonContent.Create(game.Game));
		if (response.StatusCode == HttpStatusCode.Created)
		{
			gameSim.Start(response.Headers.Location.AbsoluteUri);
		}
	}
	protected override async Task OnInitializedAsync() => 
		game = await Http.GetFromJsonAsync<GameIndexResponse>("game");

	private Dictionary<string, string> preloads = new Dictionary<string, string>
	{
		{"Draw 1 play 1", "CreateDeck \"deck\"\n" +
							"CreateDeck \"discard pile\"\n" +
							"CreateHand \"player\"\n" +
							"CreateCard \"pass\"\n" +
							"AddCard \"pass\" \"deck\"\n" +
							"Play DrawCard \"deck\" \"player\"\n" +
							"Play PlayCard \"player\" \"discard pile\"" }
	};

	private void SelectPreload(string preload)
	{
		highlighter.Value = preloads[preload];
		this.StateHasChanged();
	}

}
