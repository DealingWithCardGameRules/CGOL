@page "/studio"
@using System.Net
@inject NavigationManager NavigationManager
@inject HttpClient Http

<div class="btn-toolbar sticky-top justify-content-center" role="toolbar">
    <div class="top-toolbar btn-group px-4"  role="group">
        <button class="btn btn-primary" @onclick="NewGame">
            <i class="fa-solid fa-rotate-right"></i>
        </button>
        <input id="gamelink" class="ms-2" @bind="gameUrl" readonly />
        <button class="btn btn-primary" onclick="copyText()">
            <i class="fa-solid fa-copy"></i>
        </button>
    </div>
</div>

<h3>Card Game Studio</h3>

<FileView @ref="fileView"></FileView>

@code {
    private GameIndexResponse game;
    private FileView fileView;
    private string gameUrl = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await NewGame();
    }

    public async Task NewGame()
    {
        game = await Http.GetFromJsonAsync<GameIndexResponse>("game");
        var response = await Http.PostAsync("sessions", JsonContent.Create(string.Empty));
        if (response.StatusCode == HttpStatusCode.Created)
        {
            var session = await Http.GetFromJsonAsync<SessionResponse>(response.Headers.Location);

            if (session.Links.ContainsKey("game"))
            {
                var url = session.Links["game"];
                gameUrl = $"{NavigationManager.ToAbsoluteUri("/play").AbsoluteUri}/{url.Encode64()}";
            }

            if (session.Links.ContainsKey("concepts"))
                await fileView.UpdateConcepts(session.Links["concepts"]);

            fileView.SetSessionId(session.Session.SessionId);
        }
    }
}
